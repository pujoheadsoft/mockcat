name:                mockcat
version:             0.3.0.0
github:              pujoheadsoft/mockcat
license:             "MIT"
author:              "funnycat <pujoheadsoft@gmail.com>"
maintainer:          "funnycat <pujoheadsoft@gmail.com>"
copyright:           "2024 funnycat"

extra-source-files:
- README.md
- CHANGELOG.md

synopsis: Mock library for test in Haskell.

category: Testing

description: |
  mockcat is a mock library for testing Haskell.

  mockcat provides monadic type class generation and stub and verification functions.

  Stub functions can return values of pure types as well as values of monad types.

  Example 1: Mock of Monad type class
  @
  -- Monad type class definition
  class Monad m =\> FileOperation m where
    readFile :: FilePath -\> m Text
    writeFile :: FilePath -\> Text -> m ()

  -- program
  operationProgram ::
    FileOperation m =\>
    FilePath -\>
    FilePath -\>
    m ()
  operationProgram inputPath outputPath = do
    content \<- readFile inputPath
    writeFile outputPath content
  
  -- make mock of type class FileOperation
  makeMock [t|FileOperation|]

  spec :: Spec
  spec = do
    it "Read, and output files" do
      -- run MockT
      result \<- runMockT do
        -- stub function of function `readFile`
        _readFile $ "input.txt" |\> pack "content"

        -- stub function of function `writeFile`
        _writeFile $ "output.txt" |\> pack "content" |\> ()
        
        operationProgram "input.txt" "output.txt"

      result \`shouldBe\` ()
  @

  Example 2: Mock of function
  @
  spec :: Spec
  spec = do
    it “usage example” do
      -- create a mock (applying "value" returns the pure value True)
      mock \<- createMock $ "value" |\> True

      -- extract a stub function from a mock
      let stubFunction = stubFn mock

      -- verify the result of applying the function
      stubFunction "value" \`shouldBe\` True

      -- verify that the expected value ("value") has been applied
      mock \`shouldApplyTo\` "value"
  @
  
  For more please see the README on GitHub at <https://github.com/pujoheadsoft/mockcat#readme>

dependencies:
- base >= 4.7 && < 5
- text >= 2.0 && < 2.2
- template-haskell >= 2.18 && < 2.23
- mtl >= 2.3.1 && < 2.4

ghc-options:
- -Wall
- -Wcompat
- -Widentities
- -Wincomplete-record-updates
- -Wincomplete-uni-patterns
- -Wmissing-export-lists
- -Wmissing-home-modules
- -Wpartial-fields
- -Wredundant-constraints
- -fprint-potential-instances

library:
  source-dirs: src

tests:
  mockcat-test:
    main:                Spec.hs
    source-dirs:         test
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N

    dependencies:
    - mockcat
    - hspec
