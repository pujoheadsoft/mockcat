cabal-version: 1.12

-- This file has been generated from package.yaml by hpack version 0.37.0.
--
-- see: https://github.com/sol/hpack

name:           mockcat
version:        0.3.0.0
synopsis:       Mock library for test in Haskell.
description:    mockcat is a mock library for testing Haskell.
                .
                mockcat provides monadic type class generation and stub and verification functions.
                .
                Stub functions can return values of pure types as well as values of monad types.
                .
                Example 1: Mock of Monad type class
                @
                -- Monad type class definition
                class Monad m =\> FileOperation m where
                  readFile :: FilePath -\> m Text
                  writeFile :: FilePath -\> Text -> m ()
                .
                -- program
                operationProgram ::
                  FileOperation m =\>
                  FilePath -\>
                  FilePath -\>
                  m ()
                operationProgram inputPath outputPath = do
                  content \<- readFile inputPath
                  writeFile outputPath content
                .
                -- make mock of type class FileOperation
                makeMock [t|FileOperation|]
                .
                spec :: Spec
                spec = do
                  it "Read, and output files" do
                    -- run MockT
                    result \<- runMockT do
                      -- stub function of function `readFile`
                      _readFile $ "input.txt" |\> pack "content"
                .
                      -- stub function of function `writeFile`
                      _writeFile $ "output.txt" |\> pack "content" |\> ()
                .
                      operationProgram "input.txt" "output.txt"
                .
                    result \`shouldBe\` ()
                @
                .
                Example 2: Mock of function
                @
                spec :: Spec
                spec = do
                  it “usage example” do
                    -- create a mock (applying "value" returns the pure value True)
                    mock \<- createMock $ "value" |\> True
                .
                    -- extract a stub function from a mock
                    let stubFunction = stubFn mock
                .
                    -- verify the result of applying the function
                    stubFunction "value" \`shouldBe\` True
                .
                    -- verify that the expected value ("value") has been applied
                    mock \`shouldApplyTo\` "value"
                @
                .
                For more please see the README on GitHub at <https://github.com/pujoheadsoft/mockcat#readme>
category:       Testing
homepage:       https://github.com/pujoheadsoft/mockcat#readme
bug-reports:    https://github.com/pujoheadsoft/mockcat/issues
author:         funnycat <pujoheadsoft@gmail.com>
maintainer:     funnycat <pujoheadsoft@gmail.com>
copyright:      2024 funnycat
license:        MIT
license-file:   LICENSE
build-type:     Simple
extra-source-files:
    README.md
    CHANGELOG.md

source-repository head
  type: git
  location: https://github.com/pujoheadsoft/mockcat

library
  exposed-modules:
      Test.MockCat
      Test.MockCat.AssociationList
      Test.MockCat.Cons
      Test.MockCat.Mock
      Test.MockCat.MockT
      Test.MockCat.Param
      Test.MockCat.ParamDivider
      Test.MockCat.TH
  other-modules:
      Paths_mockcat
  hs-source-dirs:
      src
  ghc-options: -Wall -Wcompat -Widentities -Wincomplete-record-updates -Wincomplete-uni-patterns -Wmissing-export-lists -Wmissing-home-modules -Wpartial-fields -Wredundant-constraints -fprint-potential-instances
  build-depends:
      base >=4.7 && <5
    , mtl >=2.3.1 && <2.4
    , template-haskell >=2.18 && <2.23
    , text >=2.0 && <2.2
  default-language: Haskell2010

test-suite mockcat-test
  type: exitcode-stdio-1.0
  main-is: Spec.hs
  other-modules:
      Test.MockCat.AssociationListSpec
      Test.MockCat.ConsSpec
      Test.MockCat.ExampleSpec
      Test.MockCat.MockSpec
      Test.MockCat.ParamSpec
      Test.MockCat.TypeClassSpec
      Test.MockCat.TypeClassTHSpec
      Paths_mockcat
  hs-source-dirs:
      test
  ghc-options: -Wall -Wcompat -Widentities -Wincomplete-record-updates -Wincomplete-uni-patterns -Wmissing-export-lists -Wmissing-home-modules -Wpartial-fields -Wredundant-constraints -fprint-potential-instances -threaded -rtsopts -with-rtsopts=-N
  build-depends:
      base >=4.7 && <5
    , hspec
    , mockcat
    , mtl >=2.3.1 && <2.4
    , template-haskell >=2.18 && <2.23
    , text >=2.0 && <2.2
  default-language: Haskell2010
